#import "LibC";

struct My_Struct {
    var i: int64;

    func my_cool_func() {
        printf("Hello, World!\n");
    }

    func my_cool_func(my_struct: *My_Struct) {
        printf("Hello, Sailor! %lld\n", my_struct.i);
    }

    func my_cool_func(my_struct: My_Struct) {
        printf("Hello, Pilot! %lld\n", my_struct.i);
    }

    func func2(my_struct: My_Struct) {
        printf("Goodbye, Moonmen! %lld\n", my_struct.i);
    }

    func func3(my_struct: *My_Struct) {
        printf("Shut up, Morty! %lld\n", my_struct.i);
    }
}

union My_Union {
    var x: float;
    var s: string;
    var i: int32;
}

func test_inheritance() {
    struct Node {
        var i = 10;

        func do_a_thing() {
            printf("Node do_a_thing()\n");
        }

        func do_a_thing2(n: *Node) {
            printf("Node.i: %d\n", n.i);
        }
    }

    struct Node_Child : Node {
        var b = "test";

        func do_a_thing3(n: *Node_Child) {
            printf("Node_Child.i: %d\n", n.i);
            printf("Node_Child.b: %.*s\n", n.b.length, n.b.data);
        }
    }

    var child: Node_Child;
    child.do_a_thing2();
    child.do_a_thing3();

    Node_Child.do_a_thing();
}

func main() {
    test_inheritance();

    var whatever: My_Struct;
    var whatever_ptr = *whatever;
    whatever.i = 10;

    // Pilot
    whatever.my_cool_func();
    // World
    My_Struct.my_cool_func();
    // Morty
    whatever.func3();
    // Sailor
    My_Struct.my_cool_func(*whatever);

    // Sailor
    whatever_ptr.my_cool_func();
    // Moonmen
    whatever_ptr.func2();

    var union_test: My_Union;
    var union_test_ptr = *union_test;
    var f: float = 123.0;
    union_test_ptr.i = <<cast(*int32) *f;
    printf("union_test.x: %f, union_test.i: %d\n", union_test.x, union_test.i);
}
