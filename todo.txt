
// @FixMe this works in C but not here
 var _int: int = 10;
var intptr: *int = *_int;
var n5 = *<<intptr;

Allow declaring a void-return function without doing "-> void"

error when we use an identifier before it's declared withing function scope

================


/*
    Cool idea: we have a block construct like Swift has autorelease blocks, except you can use it for any data structure
    and the data structure implements a constructor and destructor

    MyCoolStruct :: struct {
        func construct() {
            // do stuff at begining of block
        }

        func destruct() {
            // do stuff at end of block
        }
    }

    @MyCoolStruct {
        // construct here

        // ...
        
        // destruct here
    }

    // This would be syntactic sugar for declaring the struct within a block

    {
        my_pool: Pool; // construct then destruct at end of block

        // do stuff ...

        // destruct here
    }
*/



===============